go run concurrency/con.go

// result
start receive
goroutine sender  a
goroutine sender  b
goroutine sender  c
receive  a
start receive
receive  b
start receive
receive  c
start receive
goroutine sender  d
goroutine sender  e
receive  d
start receive
receive  e

stard @main
end @main

Channels
FIFO

select statement
The select statement lets a goroutine wait on multiple communication operations.
A select blocks until one of its cases can run, then it executes that case. It chooses one at random if multiple are ready.

## 3 concurrency patterns
-- for-select loop
-- done channel
-- pipelines

make channel without specific capacity  is unbuffered channel,that synchronize goroutine sender and receiver
bufferedChannel will not block goroutine sender until channel is full max